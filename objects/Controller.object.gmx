<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.sling = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.changed == true) {
  global.changed = false;
}
else if (global.changed == false &amp;&amp; global.sling == false) {
  global.throwable = instance_create(0, 0, Throwable);
  global.sling = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>Controller</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>maxPower = 1000;
powerBarMaxWidth = 100;

if ( global.sling &amp;&amp; mouse_check_button(mb_left) &amp;&amp; global.throwable.clicked==true) {
    if (mouseAlreadyPressed == false) {
        startX = global.throwable.sprite_width/2 + global.throwable.x;
        startY = global.throwable.sprite_height/2 + global.throwable.y;
        mouseAlreadyPressed = true;
    }
    else if (mouseAlreadyPressed == true) {
        lineLength = point_distance(mouse_x, mouse_y, startX, startY,);
        lineDirection = point_direction(mouse_x, mouse_y, startX, startY,);
        
        if (lineLength &gt; maxPower){
            lineLength = maxPower;
        }
       
        draw_set_alpha(0.5);
        
        draw_line_width_color(mouse_x, mouse_y, startX, startY, powerBarMaxWidth * (lineLength/maxPower), 
            merge_color(c_blue, c_red, lineLength/maxPower), 
            merge_color(c_blue, c_red, lineLength/maxPower)
        );
        
        // Draw white arrow
        draw_set_color(c_white);
        draw_arrow( startX, startY, mouse_x, mouse_y, powerBarMaxWidth * (lineLength/maxPower) * 0.7);
        
        draw_set_alpha(1);
        
        show_debug_message(lineDirection );
    }
}
else {
    mouseAlreadyPressed = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message("dumping grid");
for (var row =0; row &lt; ds_grid_height(global.grid); row++) {
    for (var col =0; col &lt; ds_grid_width(global.grid); col++) {
        show_debug_message(string(global.grid[#col,row]));
    }
    show_debug_message("");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
